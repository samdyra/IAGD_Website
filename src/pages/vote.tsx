/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import { useState } from "react";
import toast from "react-hot-toast";
import "react-phone-number-input/style.css";
import PhoneInput from "react-phone-number-input";
import { AnimatePresence, motion } from "framer-motion";

type Steps = "initial" | "verify" | "voting";
type HandleSetStep = (step: Steps) => void;

export default function Vote() {
  const [step, setStep] = useState<Steps>("initial");
  const handleSetStep = (step: Steps) => setStep(step);

  const currentPage = (step: Steps) => {
    const availablePage: Record<Steps, React.ReactNode> = {
      initial: <WelcomingPage handleSetStep={handleSetStep} />,
      verify: <FormInputValidation handleSetStep={handleSetStep} />,
      voting: <FormInputVoting handleSetStep={handleSetStep} />,
    };

    return availablePage[step];
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-[conic-gradient(at_right,_var(--tw-gradient-stops))] from-indigo-100 via-[#b6bfcb] to-white">
        <main className="flex min-h-screen flex-col items-center justify-center bg-opacity-20 bg-[url('../../public/gridbg.png')]">
          <AnimatePresence mode="wait">
            <motion.div
              key={step}
              initial={{ opacity: 0, x: 100 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -100 }}
            >
              {currentPage(step)}
            </motion.div>
          </AnimatePresence>
        </main>
      </div>
    </>
  );
}

type Props = {
  handleSetStep: HandleSetStep;
};

const WelcomingPage = ({ handleSetStep }: Props) => (
  <>
    <div className="container flex flex-col items-center justify-center gap-12 px-4 py-5">
      <h1 className="max-w-4xl text-center text-5xl font-extrabold leading-tight tracking-tight text-gray-800	drop-shadow-2xl sm:text-[5rem]">
        Welcome Kamerads, to
        <span className="text-[#FF5C00]"> IAGD</span> Election
      </h1>

      <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
        <Link
          className="flex max-w-xs flex-col gap-4 rounded-xl border-2 border-[#575757] bg-[#d2daf43f] p-4 text-gray-800 shadow-2xl hover:bg-[#a3b3e43f]"
          href="/"
          target="_blank"
        >
          <h3 className="text-xl font-bold">
            Haven&apos;t receive token yet? →
          </h3>
          <div className="text-lg">
            Do you want to vote, but dont have voter token yet? Click here to
            contact Felia!
          </div>
        </Link>
        <Link
          className="flex max-w-xs flex-col gap-4 rounded-xl border-2 border-[#FF5C00] bg-[#d2daf43f] p-4 text-gray-800 shadow-2xl  hover:bg-[#a3b3e43f]"
          href="/"
          target="_blank"
        >
          <h3 className="text-xl font-bold">Study the candidates →</h3>
          <div className="text-lg">
            Learn more about all the candidates to make sure you chose the best
            candidate.
          </div>
        </Link>
      </div>
    </div>
    <div
      className="mx-auto mt-8  flex w-fit  shadow-md hover:cursor-pointer hover:opacity-75 hover:shadow-xl"
      onClick={() => handleSetStep("verify")}
    >
      <div className="rounded-l-xl border-2 border-black px-7 py-2">
        <h1 className="">Ready to vote?</h1>
      </div>
      <div className="bgp rounded-r-xl border-2 border-l-0 border-black px-7 py-2">
        <h1 className="">Click here!</h1>
      </div>
    </div>
  </>
);

const FormInputValidation = ({ handleSetStep }: Props) => {
  const [voterToken, setVoterToken] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");

  const [isChecked, setIsChecked] = useState(false);

  const isFormInvalid = voterToken === "" || !phoneNumber;

  const { mutate, isLoading: isLoadingVerify } =
    api.vote.validateVoterToken.useMutation({
      onSuccess: () => {
        toast.success("Welcome!");
        handleSetStep("voting");
      },
      onError: (err) => {
        toast.error(err.message);
      },
    });

  const handleClickVerify = () => {
    setVoterToken("");
    setPhoneNumber("");
    setIsChecked(false);

    mutate({ voterToken, phoneNumber });
  };

  const handleTokenChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setVoterToken(event.currentTarget.value);
  };

  const handlePhoneNumberChange = (phoneNumber: string) => {
    setPhoneNumber(phoneNumber);
  };

  const handleCheckboxChange = () => {
    setIsChecked(!isChecked);
  };

  return (
    <form className="w-screen ">
      <div className="mx-auto max-w-[520px] px-6  sm:w-[620px] md:w-[620px] lg:max-w-[920px]">
        <label className="mb-6 block text-2xl font-bold text-gray-900 dark:text-gray-800 md:mb-8 md:text-2xl lg:text-4xl">
          Please enter your <span className="text-[#FF5C00]">phone number</span>{" "}
          and <span className="text-[#FF5C00]">voter token</span>
        </label>
        <label className="text-md my-2 block font-semibold text-gray-900 dark:text-gray-800 md:text-lg ">
          Phone Number
        </label>
        <PhoneInput
          value={phoneNumber}
          onChange={handlePhoneNumberChange}
          className="text-md mb-4 block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-gray-900 focus:border-blue-500 focus:ring-blue-500"
          defaultCountry="ID"
          international
          countryCallingCodeEditable={false}
        />
        <label className="text-md my-2 block font-semibold text-gray-900 dark:text-gray-800  md:text-lg ">
          Voter Token
        </label>
        <input
          onChange={handleTokenChange}
          value={voterToken}
          className="text-md block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-gray-900 focus:border-blue-500 focus:ring-blue-500"
          placeholder="voter token"
          type="password"
        />
        <div className="my-4 flex items-start justify-center  ">
          <div className="mr-4 mt-[2px]">
            <input
              type="checkbox"
              checked={isChecked}
              onChange={handleCheckboxChange}
              className="h-6 w-6"
            />
          </div>
          <p className="text-sm font-bold text-gray-900  md:text-lg">
            By checking this box, I sincerely declare that I am the rightful
            owner of this phone number and token.
          </p>
        </div>
        <button
          type="button"
          className={`text-md transition-duration: 150ms; rounded-lg px-5 py-2.5 text-center font-medium text-white hover:bg-amber-600 focus:outline-none focus:ring-4 focus:ring-blue-300 sm:w-auto
          ${
            !isChecked || isLoadingVerify || isFormInvalid
              ? "bg-slate-400"
              : "bg-[#FF5C00]"
          }`}
          onClick={handleClickVerify}
          disabled={!isChecked || isLoadingVerify || isFormInvalid}
        >
          {isLoadingVerify ? "Loading..." : "Verify Token"}
        </button>
      </div>
    </form>
  );
};

const candidateExample = [
  {
    name: "Lionel Messi",
    num: 1,
    vision:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, iure?",
  },
  {
    name: "Cristiano Ronaldo",
    num: 2,
    vision:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, iure?",
  },
];

const FormInputVoting = ({ handleSetStep }: Props) => {
  const [selectNum, setSelectNum] = useState(0);

  const handleSelectNum = (numCandidate: number) => {
    setSelectNum(numCandidate);
  };

  return (
    <>
      <div className="mb-36 mt-16 md:mt-8 lg:mt-16">
        <h1 className="mb-4 px-4 text-center text-3xl font-bold text-gray-800 md:text-4xl">
          Vote <span className="text-[#FF5C00]">Kandidat</span> Pilihanmu!
        </h1>
        <div className="mx-auto mb-4 w-56 cursor-pointer rounded-lg border-2 border-[#FF5C00] bg-[#d2daf43f] p-2 shadow-2xl hover:bg-[#a3b3e43f]">
          <h1 className="text-center  text-sm font-semibold text-gray-800">
            Belum yakin? Klik disini untuk mempelajari para kandidat
          </h1>
        </div>
        <div className="mt-8 md:flex md:gap-8 lg:gap-16">
          {candidateExample.map((candidate, idx) => {
            const isSelected = candidate.num === selectNum;

            return (
              <div
                className="mx-auto mb-6 aspect-[3/4] h-[420px] cursor-pointer rounded-3xl border-2 border-black bg-[#FF5C00] p-5 text-gray-800 hover:opacity-80 md:h-[450px]"
                key={idx}
                onClick={() => handleSelectNum(candidate.num)}
              >
                <div className="absolute h-12 w-12 rounded-full border-4 border-black bg-white">
                  {isSelected && (
                    <h1 className="ml-1 text-3xl font-bold text-green-700">
                      ✓
                    </h1>
                  )}
                </div>
                <img
                  alt="user"
                  className="relative z-10 mx-auto mt-2 aspect-[1/1] h-[160px] overflow-hidden rounded-full border-2"
                  src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png"
                ></img>
                <div className="relative -top-[40px] h-[250px] w-full rounded-lg   border-gray-800 bg-white px-5 pt-12 shadow-md backdrop-blur-md md:h-[280px]">
                  <h1 className="z-30 text-center text-lg  text-gray-900">
                    Nomor Urut {candidate.num}
                  </h1>
                  <h1 className="z-30 text-center text-lg font-bold text-gray-900 md:mt-4 md:text-2xl">
                    {candidate.name}
                  </h1>
                  <p className="z-30 mt-3 text-center  text-lg italic text-gray-900 md:text-xl">
                    &quot;{candidate.vision}&quot;
                  </p>
                </div>
              </div>
            );
          })}
        </div>
      </div>
      <div className="fixed bottom-0 left-0 right-0 z-40 h-16 w-full  bg-white/30 shadow-md backdrop-blur-md" />
      <div className="fixed inset-x-0 bottom-8 z-40 mx-auto h-16 w-60 cursor-pointer rounded-lg bg-[#18229B] hover:opacity-80">
        <h1 className="mt-4 text-center text-lg font-bold text-white">
          {selectNum === 0
            ? "Klik salah satu kandidat"
            : `Konfirmasi Pilih Nomor ${selectNum}`}
        </h1>
      </div>
    </>
  );
};
